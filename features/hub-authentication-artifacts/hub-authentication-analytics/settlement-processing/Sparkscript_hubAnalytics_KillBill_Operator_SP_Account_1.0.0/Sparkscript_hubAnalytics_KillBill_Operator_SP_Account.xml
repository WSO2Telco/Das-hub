<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Analytics>
    <Name>Sparkscript-hubAnalytics-KillBill-Operator-Sub-Account</Name>
    <Script>

	    create temporary table spark_jdbc_operator using CarbonJDBC options (dataSource "WSO2TELCO_DEP_DB", schema "id STRING, operatorname STRING", tableName "operators");
        create temporary table spark_jdbc_operatorapps using CarbonJDBC options (dataSource "WSO2TELCO_DEP_DB", schema "applicationid STRING, operatorid STRING, isactive INTEGER", tableName "operatorapps");
        create temporary table spark_jdbc_am_subscription using CarbonJDBC options (dataSource "WSO2AM_DB", schema "api_id STRING, application_id STRING, created_by STRING ", tableName "am_subscription");
		
        CREATE TEMPORARY TABLE subAccount using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_killbill_account_operator_SP_summary",
        schema "
        serviceProvider STRING -i,
        serviceProviderId STRING -i,
		operatorName STRING -i,
		operatorId STRING -i,
		killbillAID STRING -i",
        primaryKeys "serviceProvider,operatorName"
        );
		
		CREATE TEMPORARY TABLE subAccountTemp using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_killbill_account_operator_SP_summary_temp",
        schema "
        serviceProvider STRING -i,
        serviceProviderId STRING -i,
		operatorName STRING -i,
		operatorId STRING -i",
        primaryKeys "serviceProvider,operatorName"
        );
		CREATE TEMPORARY TABLE subAccountTemp2 using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_killbill_account_operator_SP_summary_temp",
        schema "
        serviceProvider STRING -i,
        serviceProviderId STRING -i,
		operatorName STRING -i,
		operatorId STRING -i",
        primaryKeys "serviceProvider,operatorName"
        );
        

		insert into table subAccount select aaa.serviceProvider,aaa.serviceProviderId,aaa.operatorName,aaa.operatorId ,addAccount("admin","request","request", concat(concat(aaa.operatorName,"_"),aaa.serviceProvider) ,"USD", 			concat(concat(aaa.operatorId,"_"),aaa.serviceProviderId), length(concat(aaa.serviceProvider,concat("_",aaa.operatorName)))) 
		from(
			select sub.serviceProvider,sub.serviceProviderId,sub.operatorName,sub.operatorId
			from(
				select concat(spark_jdbc_am_subscription.created_by,"@carbon.super") AS serviceProvider, spark_jdbc_operator.id AS operatorId,
				concat(spark_jdbc_am_subscription.created_by,"@carbon.super") AS serviceProviderId,
				spark_jdbc_operator.operatorname AS operatorName
				FROM spark_jdbc_am_subscription
				JOIN spark_jdbc_operatorapps ON spark_jdbc_am_subscription.application_id = spark_jdbc_operatorapps.applicationid
				JOIN spark_jdbc_operator ON spark_jdbc_operatorapps.operatorid = spark_jdbc_operator.id
				EXCEPT
				select serviceProvider,operatorId,serviceProviderId,operatorName
				from subAccountTemp2
			) as sub 
		) as aaa group by aaa.serviceProvider,aaa.operatorId,aaa.serviceProviderId,aaa.operatorName;  
				
		insert overwrite table subAccountTemp select serviceProvider,serviceProviderId,operatorName,operatorId from subAccount where killbillAID!="Did not created";                         
    	
    	CREATE TEMPORARY TABLE errorTable
		USING org.wso2.carbon.analytics.spark.event.EventStreamProvider
		OPTIONS (streamName "org.wso2telco.analytics.hub.stream.killbill.errors",
				 version "1.0.0",
				 payload "Task STRING,Status STRING, _timestamp LONG"
		);
		
		
		CREATE TEMPORARY TABLE subAccount3 using CarbonAnalytics options (tableName "org_wso2telco_analytics_hub_stream_killbill_account_operator_SP_summary",
		schema "
		serviceProvider STRING -i,
		serviceProviderId STRING -i,
		operatorName STRING -i,
		operatorId STRING -i,
		killbillAID STRING -i,
		_timestamp LONG",
		primaryKeys "serviceProvider,operatorName"
		);
		
		insert overwrite table errorTable select "SubAccountCreation","faild",_timestamp from subAccount3 where killbillAID="Did not created";
                                
    
                            
                           
    </Script>
    <CronExpression>0 0/5 * 1/1 * ? *</CronExpression>
</Analytics>
                      
                            
